# Drupal 8 ruleset extras for PHP >= 7.1 code.
imports:
    - { resource: "%vendor_dir%/rector/rector/config/set/php/php70.yaml" }
    - { resource: "%vendor_dir%/rector/rector/config/set/php/php71.yaml" }

parameters:
    exclude_rectors:
    # Disabled because it can keep swapping order back and forth.
    - Rector\Php\Rector\List_\ListSwapArrayOrderRector

    # Disabled because it is not compatible with Drupal 8.
    # -    $config = \Drupal::config('entity_type.manager');
    # +    $config = (new \Drupal())->config('entity_type.manager');
    - Rector\Php\Rector\StaticCall\StaticCallOnNonStaticToInstanceCallRector

    # Disabled because we do not want changes like this.
    # -      $rc = new \ReflectionClass($this->fooBar());
    # +      $rc = new \ReflectionClass(self::fooBar());
    - Rector\Php\Rector\MethodCall\ThisCallOnStaticMethodToStaticCallRector

    # Disabled because it is not compatible with Drupal 8 core that is still
    # uses < PHP 7.0 syntax - no parameter type declarations in inherited
    # methods from Drupal 8 core classes.
    - Rector\Php\Rector\FunctionLike\ParamTypeDeclarationRector

    # Disabled because adding return type declaration to methods that overrides
    # Drupal 8 core methods can be still problematic sometimes.
    # You can re-enable this in your rector.yml by adding
    # Drupal8Rector\Rector\FunctionLike\ReturnTypeDeclarationRectorProxy rector to
    # services.
    - Rector\Php\Rector\FunctionLike\ReturnTypeDeclarationRector
